services:
  db:
    image: postgres:17
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  frontend:
    build: ../webback_frontend
    ports:
        - "3000:3000"
  caddy:
      image: caddy:latest
      ports:
        - "80:80"
        - "443:443"
      volumes:
        - ./Caddyfile:/etc/caddy/Caddyfile
  minio:
    image: minio/minio
    container_name: minio
    restart: always
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  django:
    build: .
    container_name: django_app
    command: ["sh", "-c", "python manage.py collectstatic --noinput && python manage.py migrate && python create_minio_bucket.py && python manage.py runserver 0.0.0.0:8000"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - minio
    environment:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_STORAGE_BUCKET_NAME: media
      AWS_S3_ENDPOINT_URL: http://minio:9000
      AWS_S3_REGION_NAME: us-east-1
      AWS_S3_USE_SSL: "false"

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: always

volumes:
  postgres_data:
  minio_data:
  static: