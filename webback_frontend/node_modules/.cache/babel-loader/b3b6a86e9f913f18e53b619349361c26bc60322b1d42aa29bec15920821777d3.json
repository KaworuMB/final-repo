{"ast":null,"code":"var _jsxFileName = \"/app/src/components/DocumentUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { authFetch } from '../utils/authFetch'; // JWT fetch\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DocumentUpload() {\n  _s();\n  const {\n    id\n  } = useParams(); // project id\n  const [file, setFile] = useState(null);\n  const [name, setName] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('name', name || file.name);\n    formData.append('project', id); // 👈 обязательно\n\n    const response = await authFetch('/api/documents/', {\n      method: 'POST',\n      body: formData // без headers\n    });\n    if (response.ok) {\n      alert(\"Документ загружен успешно\");\n      window.location.href = `/projects/${id}`; // Перейти назад\n    } else {\n      alert(\"Ошибка загрузки\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0]),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0430 (\\u043E\\u043F\\u0446\\u0438\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u043E)\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(DocumentUpload, \"YTBRZASd7Yl62T8wricuqXL9ruA=\", false, function () {\n  return [useParams];\n});\n_c = DocumentUpload;\nexport default DocumentUpload;\nvar _c;\n$RefreshReg$(_c, \"DocumentUpload\");","map":{"version":3,"names":["React","useState","useParams","authFetch","jsxDEV","_jsxDEV","DocumentUpload","_s","id","file","setFile","name","setName","handleSubmit","e","preventDefault","formData","FormData","append","response","method","body","ok","alert","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","encType","type","onChange","target","files","required","placeholder","value","_c","$RefreshReg$"],"sources":["/app/src/components/DocumentUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { authFetch } from '../utils/authFetch'; // JWT fetch\r\n\r\nfunction DocumentUpload() {\r\n  const { id } = useParams(); // project id\r\n  const [file, setFile] = useState(null);\r\n  const [name, setName] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('name', name || file.name);\r\n    formData.append('project', id); // 👈 обязательно\r\n\r\n    const response = await authFetch('/api/documents/', {\r\n      method: 'POST',\r\n      body: formData, // без headers\r\n    });\r\n\r\n    if (response.ok) {\r\n      alert(\"Документ загружен успешно\");\r\n      window.location.href = `/projects/${id}`; // Перейти назад\r\n    } else {\r\n      alert(\"Ошибка загрузки\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-form\">\r\n      <h1>Загрузить документ</h1>\r\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n        <input\r\n          type=\"file\"\r\n          onChange={e => setFile(e.target.files[0])}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Название документа (опционально)\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Загрузить</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DocumentUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,QAAQ,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,IAAI,EAAE;IAEX,MAAMO,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAET,IAAI,CAAC;IAC7BO,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,IAAIF,IAAI,CAACE,IAAI,CAAC;IAC1CK,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEV,EAAE,CAAC,CAAC,CAAC;;IAEhC,MAAMW,QAAQ,GAAG,MAAMhB,SAAS,CAAC,iBAAiB,EAAE;MAClDiB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL,QAAQ,CAAE;IAClB,CAAC,CAAC;IAEF,IAAIG,QAAQ,CAACG,EAAE,EAAE;MACfC,KAAK,CAAC,2BAA2B,CAAC;MAClCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,aAAalB,EAAE,EAAE,CAAC,CAAC;IAC5C,CAAC,MAAM;MACLe,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EACF,CAAC;EAED,oBACElB,OAAA;IAAKsB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BvB,OAAA;MAAAuB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B3B,OAAA;MAAM4B,QAAQ,EAAEpB,YAAa;MAACqB,OAAO,EAAC,qBAAqB;MAAAN,QAAA,gBACzDvB,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAEtB,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACuB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;QAC1CC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF3B,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXK,WAAW,EAAC,8KAAkC;QAC9CC,KAAK,EAAE9B,IAAK;QACZyB,QAAQ,EAAEtB,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACuB,MAAM,CAACI,KAAK;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACF3B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACzB,EAAA,CA9CQD,cAAc;EAAA,QACNJ,SAAS;AAAA;AAAAwC,EAAA,GADjBpC,cAAc;AAgDvB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}